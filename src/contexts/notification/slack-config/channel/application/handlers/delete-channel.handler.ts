// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';
import { Inject } from '@nestjs/common';
import { Result, DomainError } from 'src/shared/errors';
import { DeleteChannelUseCase } from '../use-cases';
import { DeleteChannelCommand } from '../commands';

@CommandHandler(DeleteChannelCommand)
export class DeleteChannelHandler
  implements ICommandHandler<DeleteChannelCommand>
{
  constructor(
    @Inject(DeleteChannelUseCase)
    private readonly deleteChannelUseCase: DeleteChannelUseCase,
  ) {}

  async execute(
    command: DeleteChannelCommand,
  ): Promise<Result<void, DomainError>> {
    return await this.deleteChannelUseCase.execute({
      user: command.user,
      id: command.id,
      correlationId: command.correlationId,
      authorizationReason: 'CQRS Command Handler',
    });
  }
}
