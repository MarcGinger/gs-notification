// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import {
  RecordVOInstance,
  createRecordVO,
  createRecordVOErrors,
} from 'src/shared/domain/value-objects';
import { ChannelErrors } from '../errors/channel.errors';

/**
 * SubscribedEvents Record Value Object
 * Validates a plain object (Record<string, unknown>); deepFreeze.
 */
export const ChannelSubscribedEvents = createRecordVO({
  name: 'SubscribedEvents',
  // JSON key validation - must start with letter/underscore, contain only alphanumeric, underscore
  keyPattern: /^[a-zA-Z_][a-zA-Z0-9_]*$/,

  // Optional: declarative refinements for advanced validation
  // refinements: [
  // ],

  errors: createRecordVOErrors(
    ChannelErrors.INVALID_SUBSCRIBED_EVENTS,
    'SubscribedEvents',
  ),
});

/** Public instance type for SubscribedEvents */
export type ChannelSubscribedEvents = RecordVOInstance;

// Convenience creators
export const createChannelSubscribedEvents = (v: Record<string, unknown>) =>
  ChannelSubscribedEvents.create(v);

export const channelSubscribedEventsFrom = (v: unknown) =>
  ChannelSubscribedEvents.from(v);
