// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

/**
 * Template Created Event Payload
 * Contains only business facts - no envelope metadata, timestamps, or versioning
 */
export interface TemplateCreatedEventPayload {
  code: string;
  workspaceCode: string;
  name: string;
  description?: string;
  contentBlocks: string[];
  variables?: string[];
  samplePayload?: Record<string, unknown>;
  enabled: boolean;
}

/**
 * Template Created Domain Event
 *
 * Emitted when a new template is successfully created.
 * Contains complete template information and creation metadata.
 * Enhanced with security metadata and PII protection capabilities.
 */
export class TemplateCreatedEvent {
  public readonly eventType = 'NotificationSlackConfigTemplateCreated.v1';
  public readonly eventVersion = 'v1';

  constructor(public readonly payload: TemplateCreatedEventPayload) {}

  // Factory method - no metadata needed, just business data
  static create(data: TemplateCreatedEventPayload): TemplateCreatedEvent {
    return new TemplateCreatedEvent(data);
  }

  get code(): string {
    return this.payload.code;
  }

  get workspaceCode(): string {
    return this.payload.workspaceCode;
  }

  get name(): string {
    return this.payload.name;
  }

  get description(): string | undefined {
    return this.payload.description;
  }

  get contentBlocks(): string[] {
    return this.payload.contentBlocks;
  }

  get variables(): string[] | undefined {
    return this.payload.variables;
  }

  get samplePayload(): Record<string, unknown> | undefined {
    return this.payload.samplePayload;
  }

  get enabled(): boolean {
    return this.payload.enabled;
  }
}
