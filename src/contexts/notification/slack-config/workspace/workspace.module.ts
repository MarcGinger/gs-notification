// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import { Module } from '@nestjs/common';
import { SlackConfigSharedModule } from '../slack-config-shared.module';
import { WorkspaceController } from './interface/http/controllers';
import {
  WorkspaceApplicationService,
  WorkspaceAuthorizationService,
  WorkspaceAuthorizationAdapter,
} from './application/services';
import {
  ICreateWorkspaceUseCase,
  CreateWorkspaceUseCase,
  IUpdateWorkspaceUseCase,
  UpdateWorkspaceUseCase,
  IGetWorkspaceUseCase,
  GetWorkspaceUseCase,
} from './application/use-cases';

// import { IWorkspaceRepository } from './application/ports';
import {
  WorkspaceQueryRepository,
  WorkspaceReaderRepository,
  WorkspaceWriterRepository,
} from './infrastructure/repositories';

// Tokens for injection - imported directly from port files
import {
  WORKSPACE_READER_TOKEN,
  WORKSPACE_WRITER_TOKEN,
  WORKSPACE_QUERY_TOKEN,
} from './application/ports';
@Module({
  imports: [
    SlackConfigSharedModule, // Provides all common infrastructure and services
  ],
  controllers: [WorkspaceController],
  providers: [
    // Repository implementations with tokens (before services that depend on them)
    {
      provide: WORKSPACE_READER_TOKEN,
      useClass: WorkspaceReaderRepository,
    },
    {
      provide: WORKSPACE_WRITER_TOKEN,
      useClass: WorkspaceWriterRepository,
    },
    {
      provide: WORKSPACE_QUERY_TOKEN,
      useClass: WorkspaceQueryRepository,
    },

    // Services that depend on repositories
    WorkspaceApplicationService,
    WorkspaceAuthorizationService,
    WorkspaceAuthorizationAdapter,

    // Use case implementations
    {
      provide: ICreateWorkspaceUseCase,
      useClass: CreateWorkspaceUseCase,
    },
    {
      provide: IUpdateWorkspaceUseCase,
      useClass: UpdateWorkspaceUseCase,
    },
    {
      provide: IGetWorkspaceUseCase,
      useClass: GetWorkspaceUseCase,
    },
  ],
  exports: [
    // Repository tokens for external module consumption
    WORKSPACE_READER_TOKEN,
    WORKSPACE_WRITER_TOKEN,
    WORKSPACE_QUERY_TOKEN,
  ],
})
export class WorkspaceModule {}
