// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import { DomainError, Result, err, withContext } from 'src/shared/errors';
import { Clock } from 'src/shared/domain/clock';
import { EventMetadata } from 'src/shared/domain/events';
import { WorkspaceAggregate } from '../aggregates';
import { CreateWorkspaceProps } from '../props';
import { WorkspaceDomainState } from '../state';
import {
  WorkspaceCreatedAt,
  WorkspaceUpdatedAt,
  WorkspaceVersion,
  WorkspaceId,
} from '../value-objects';

/**
 * Enhanced workspace entity factory with comprehensive validation and security context
 * Moved from application layer to properly separate business concerns
 */
export function createWorkspaceAggregateFromProps(
  props: CreateWorkspaceProps,
  metadata: EventMetadata,
  clock: Clock,
  // validatedEntities?: {
  //  channels?: ChannelReference[];
  // },
): Result<WorkspaceAggregate, DomainError> {
  // Validate each property by creating value objects
  const idResult = WorkspaceId.from(props.id);
  if (!idResult.ok) {
    return err(
      withContext(idResult.error, {
        ...idResult.error.context,
        correlationId: metadata.correlationId,
        userId: metadata.userId,
        operation: 'create_workspace',
        id: props.id,
      }),
    );
  }

  const createdAtResult = WorkspaceCreatedAt.create(clock.now());
  if (!createdAtResult.ok) {
    return err(createdAtResult.error);
  }

  const updatedAtResult = WorkspaceUpdatedAt.create(clock.now());
  if (!updatedAtResult.ok) {
    return err(updatedAtResult.error);
  }

  const versionResult = WorkspaceVersion.create(1); // Initial version is 1
  if (!versionResult.ok) {
    return err(versionResult.error);
  }

  // Create the entity properties with validated value objects
  const entityProps: WorkspaceDomainState = {
    id: idResult.value,
    createdAt: createdAtResult.value,
    updatedAt: updatedAtResult.value,
    version: versionResult.value,
  };

  // Create the entity using the constructor
  return WorkspaceAggregate.create(entityProps, clock, metadata);
}
