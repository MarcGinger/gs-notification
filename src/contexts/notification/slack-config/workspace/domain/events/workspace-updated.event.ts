// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

/**
 * Workspace Updated Event Payload
 * Domain-shaped payload with no PII
 * Same shape as Created event for consistent replayability
 */
export interface WorkspaceUpdatedEventPayload {
  id: string;
  name: string;
  botToken?: string;
  signingSecret?: string;
  appId?: string;
  botUserId?: string;
  defaultChannelId?: string;
  enabled: boolean;
}

/**
 * Workspace Updated Domain Event
 *
 * Emitted when workspace information is modified.
 * Contains complete domain state (same shape as Created event) for replayability.
 */
export class WorkspaceUpdatedEvent {
  public readonly eventType = 'NotificationSlackConfigWorkspaceUpdated.v1';
  public readonly eventVersion = 'v1';

  constructor(public readonly payload: WorkspaceUpdatedEventPayload) {}

  // Factory method - simple domain data, no metadata in payload
  static create(data: WorkspaceUpdatedEventPayload): WorkspaceUpdatedEvent {
    return new WorkspaceUpdatedEvent(data);
  }

  get id(): string {
    return this.payload.id;
  }

  get name(): string {
    return this.payload.name;
  }

  get botToken(): string | undefined {
    return this.payload.botToken;
  }

  get signingSecret(): string | undefined {
    return this.payload.signingSecret;
  }

  get appId(): string | undefined {
    return this.payload.appId;
  }

  get botUserId(): string | undefined {
    return this.payload.botUserId;
  }

  get defaultChannelId(): string | undefined {
    return this.payload.defaultChannelId;
  }

  get enabled(): boolean {
    return this.payload.enabled;
  }
}
