// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import { EventMetadata } from 'src/shared/domain/events';
import type { WorkspaceSnapshotProps } from '../props';

/**
 * Workspace change tracking interface
 * Used to track field-level changes in workspace updates
 */
export interface WorkspaceChangeSet {}

/**
 * Workspace Updated Event Payload
 * Contains information about what fields were changed in the workspace
 */
export interface WorkspaceUpdatedEventPayload {
  id: string;
  before: WorkspaceSnapshotProps;
  after: WorkspaceSnapshotProps;
  changes: WorkspaceChangeSet;
  version: number;
  updatedAt: Date;
  metadata: EventMetadata;
}

/**
 * Workspace Updated Domain Event
 *
 * Emitted when workspace information is modified.
 * Contains change tracking information and update metadata.
 */
export class WorkspaceUpdatedEvent {
  public readonly eventType = 'NotificationSlackConfigWorkspaceUpdated.v1';
  public readonly eventVersion = 'v1';

  constructor(public readonly payload: WorkspaceUpdatedEventPayload) {}

  // Factory method with security context
  static create(
    data: Omit<WorkspaceUpdatedEventPayload, 'metadata'>,
    baseMetadata: EventMetadata,
  ): WorkspaceUpdatedEvent {
    const metadata: EventMetadata = {
      ...baseMetadata,
      eventVersion: '1.0',
      source: 'notification.domain.workspace',
    };

    return new WorkspaceUpdatedEvent({
      ...data,
      metadata,
    });
  }

  get id(): string {
    return this.payload.id;
  }

  get changes(): WorkspaceChangeSet {
    return this.payload.changes;
  }

  get version(): number {
    return this.payload.version;
  }

  get updatedAt(): Date {
    return this.payload.updatedAt;
  }

  get metadata(): EventMetadata {
    return this.payload.metadata;
  }
}
