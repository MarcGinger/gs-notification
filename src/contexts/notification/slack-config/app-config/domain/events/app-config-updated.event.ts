// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

/**
 * AppConfig Updated Event Payload
 * Domain-shaped payload with no PII
 * Same shape as Created event for consistent replayability
 */
export interface AppConfigUpdatedEventPayload {
  tenant: string;
  workspaceCode: string;
  maxRetryAttempts: number;
  retryBackoffSeconds: number;
  defaultLocale: string;
  loggingEnabled: boolean;
  auditChannelId?: string;
  metadata?: Record<string, unknown>;
}

/**
 * AppConfig Updated Domain Event
 *
 * Emitted when appConfig information is modified.
 * Contains complete domain state (same shape as Created event) for replayability.
 */
export class AppConfigUpdatedEvent {
  public readonly eventType = 'NotificationSlackConfigAppConfigUpdated.v1';
  public readonly eventVersion = 'v1';

  constructor(public readonly payload: AppConfigUpdatedEventPayload) {}

  // Factory method - simple domain data, no metadata in payload
  static create(data: AppConfigUpdatedEventPayload): AppConfigUpdatedEvent {
    return new AppConfigUpdatedEvent(data);
  }

  get tenant(): string {
    return this.payload.tenant;
  }

  get workspaceCode(): string {
    return this.payload.workspaceCode;
  }

  get maxRetryAttempts(): number {
    return this.payload.maxRetryAttempts;
  }

  get retryBackoffSeconds(): number {
    return this.payload.retryBackoffSeconds;
  }

  get defaultLocale(): string {
    return this.payload.defaultLocale;
  }

  get loggingEnabled(): boolean {
    return this.payload.loggingEnabled;
  }

  get auditChannelId(): string | undefined {
    return this.payload.auditChannelId;
  }

  get metadata(): Record<string, unknown> | undefined {
    return this.payload.metadata;
  }
}
