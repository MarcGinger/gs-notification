// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { INestApplication } from '@nestjs/common';
import { SwaggerConfigUtil } from 'src/docs/swagger-config.util';
import { AppConfigModule } from '../app-config.module';
/**
 * AppConfig documentation endpoints interface
 */
export interface AppConfigDocumentationUrls {
  appConfig: string;
}

/**
 * AppConfig Documentation
 * This module handles the Swagger documentation for app_configs
 *
 */
export class AppConfigDocumentation {
  static setup(app: INestApplication, port: string | number): void {
    const config = new DocumentBuilder()
      .addBearerAuth(
        { type: 'http', scheme: 'bearer', bearerFormat: 'JWT' },
        'bearer',
      )
      .setTitle('üì± AppConfig Management API')
      .setDescription(
        `
## bounded context: notification
[‚Üê Back to documentation](/api/docs/notification)

### application: slack-config
[‚Üê Back to documentation](/api/docs/notification/slack-config)
High-level operational configuration for the Slack app itself.`,
      )
      .setVersion('1.0.0')
      .addTag('AppConfigs', `Configuration for app_config table`);

    // Add dynamic server configuration
    SwaggerConfigUtil.addServers(config, port);

    const document = SwaggerModule.createDocument(app, config.build(), {
      include: [AppConfigModule],
      extraModels: [],
    });

    SwaggerModule.setup(
      'api/docs/notification/slack-config/app-config',
      app,
      document,
    );
  }

  /**
   * Setup all appConfig-related documentation endpoints
   * This method centralizes the setup of all appConfig module documentation
   */
  static setupAll(
    app: INestApplication,
    port: string | number,
  ): AppConfigDocumentationUrls {
    // Setup main appConfig documentation
    AppConfigDocumentation.setup(app, port);

    // Setup sub-module documentation

    // Return all endpoint URLs
    return {
      appConfig: AppConfigDocumentation.getEndpoint(port),
    };
  }

  static getEndpoint(port: string | number): string {
    return `${SwaggerConfigUtil.getServerUrl(port)}/api/docs/notification/slack-config/app-config`;
  }
}
