// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import { AppConfigDomainState } from '../../domain/state';
import { DetailAppConfigResponse } from '../dtos';

/**
 * AppConfig DTO Assembler
 *
 * Converts AppConfigDomainState (pure VOs) to transport DTOs.
 * Bridges the gap between rich domain objects and API response format.
 * Uses existing generated DTOs and follows established patterns.
 */

/**
 * Assembles DTOs from AppConfigDomainState for API transport
 */
export class AppConfigDtoAssembler {
  /**
   * Convert AppConfigDomainState to detailed response DTO
   *
   * @param domainState - Rich domain state with VOs
   * @returns Clean DTO for API response
   */
  static toDetailResponse(
    domainState: AppConfigDomainState,
  ): DetailAppConfigResponse {
    const dto = new DetailAppConfigResponse();

    // Extract primitive values from VOs
    dto.code = domainState.code.value;
    dto.workspaceCode = domainState.workspaceCode.value;
    dto.maxRetryAttempts = domainState.maxRetryAttempts.value;
    dto.retryBackoffSeconds = domainState.retryBackoffSeconds.value;
    dto.defaultLocale = domainState.defaultLocale.value;
    dto.loggingEnabled = domainState.loggingEnabled.value;
    dto.auditChannelId = domainState.auditChannelId?.value;
    dto.metadata = domainState.metadata?.value;

    return dto;
  }
  /**
   * Convert array of AppConfigDomainState to array of detail DTOs
   *
   * @param domainStates - Array of rich domain states
   * @returns Array of clean DTOs for detail API response
   */
  static toDetailResponseArray(
    domainStates: AppConfigDomainState[],
  ): DetailAppConfigResponse[] {
    return domainStates.map((domainState) =>
      this.toDetailResponse(domainState),
    );
  }
}
