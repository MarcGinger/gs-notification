// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { INestApplication } from '@nestjs/common';
import { SwaggerConfigUtil } from 'src/docs/swagger-config.util';

/**
 * notification slack-config application/service Documentation
 * This module handles the Swagger documentation for notifications
 *
 */
export class SlackConfigDocumentation {
  static setup(app: INestApplication, port: string | number): void {
    const config = new DocumentBuilder()
      .addBearerAuth(
        { type: 'http', scheme: 'bearer', bearerFormat: 'JWT' },
        'bearer',
      )
      .setTitle(
        `üì± notification slack-config application/service Management API`,
      )
      .setDescription(
        `## Access notification slack-config application/service
## bounded context: notification
[‚Üê Back to documentation](/api/docs/notification)

### application: slack-config

  | Modules |
  |---------------|
  | [***workspace  ‚Üí***](/api/docs/notification/slack-config/workspace) |
  | [***channel  ‚Üí***](/api/docs/notification/slack-config/channel) |
  | [***template  ‚Üí***](/api/docs/notification/slack-config/template) |
  | [***app-config  ‚Üí***](/api/docs/notification/slack-config/app-config) |
        `,
      )
      .setVersion('1.0.0')
      .addTag(
        'SlackConfig',
        `Configuration for notification slack-config application/service`,
      );

    // Add dynamic server configuration
    SwaggerConfigUtil.addServers(config, port);

    // Create a document with no modules to ensure no API paths are included
    const document = SwaggerModule.createDocument(app, config.build(), {
      include: [], // No modules included - this is a links-only documentation page
      extraModels: [],
      deepScanRoutes: false, // Prevent automatic route discovery
      ignoreGlobalPrefix: true, // Ignore global prefix to avoid path discovery
    });

    // Remove any automatically discovered paths and schemas
    document.paths = {};
    document.components = { schemas: {} };

    SwaggerModule.setup('api/docs/notification/slack-config', app, document);
  }

  /**
   * Setup all notification-related documentation endpoints
   * This method centralizes the setup of all notification module documentation
   */
  static setupAll(
    app: INestApplication,
    port: string | number,
  ): Record<string, string> {
    // Setup main notification documentation
    SlackConfigDocumentation.setup(app, port);

    // Setup sub-module documentation

    // Return all endpoint URLs
    return {
      notification: SlackConfigDocumentation.getEndpoint(port),
    };
  }

  static getEndpoint(port: string | number): string {
    return `${SwaggerConfigUtil.getServerUrl(port)}/api/docs/notification/slack-config`;
  }
}
