// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

/**
 * SlackExecute Domain Constants
 *
 * Centralized constants for the slack-execute bounded context to avoid
 * string literals scattered throughout the codebase. This improves
 * maintainability, type safety, and reduces the risk of typos.
 */

/**
 * Dependency Injection Tokens
 *
 * Constants for NestJS dependency injection tokens to ensure type safety
 * and consistency across the bounded context.
 */
export const SLACK_EXECUTE_DI_TOKENS = {
  // Cross-domain reader ports (used by Product module for foreign key validation)
  CURRENCY_READER: 'ICurrencyReader',
  CHANNEL_READER: 'IChannelReader',
  RAIL_READER: 'IRailReader',
  TRANSACTIONAL_FEE_READER: 'ITransactionalFeeReader',
  INITIATION_FEE_READER: 'IInitiationFeeReader',
  PERIODIC_FEE_READER: 'IPeriodicFeeReader',
  PENALTY_FEE_READER: 'IPenaltyFeeReader',

  // Infrastructure services
  IO_REDIS: 'SlackExecuteRedisClient', // Token expected by projectors
  CACHE_SERVICE: 'SlackExecuteCacheService',
  CHECKPOINT_STORE: 'SlackExecuteCheckpointStore',
  DATA_SOURCE: 'SlackExecuteDataSource',
  CATCHUP_RUNNER: 'SlackExecuteCatchupRunner',

  // Authorization services
  AUTHORIZATION_SERVICE: 'INoopAuthorizationService',
} as const;

/**
 * Error Categories
 *
 * Standardized error category constants used across the domain
 * for consistent error classification and handling.
 */
export const SLACK_EXECUTE_ERROR_CATEGORIES = {
  INFRASTRUCTURE: 'infrastructure',
  VALIDATION: 'validation',
  BUSINESS: 'business',
  SECURITY: 'security',
  INTEGRATION: 'integration',
} as const;

/**
 * Data Classification Levels
 *
 * Constants for PII and data classification used in compliance
 * and data protection workflows.
 */
export const SLACK_EXECUTE_DATA_CLASSIFICATION = {
  CONFIDENTIAL: 'confidential',
  INTERNAL: 'internal',
  PUBLIC: 'public',
} as const;

/**
 * Operation Types
 *
 * Constants for operation types used in authorization, logging,
 * and audit trails.
 */
export const SLACK_EXECUTE_OPERATIONS = {
  CREATE: 'create',
  READ: 'read',
  UPDATE: 'update',
  DELETE: 'delete',
  LIST: 'list',
  BULK_IMPORT: 'bulk_import',
  BULK_EXPORT: 'bulk_export',
} as const;

/**
 * Permission Tags
 *
 * Constants for permission tags used in authorization policies.
 */
export const SLACK_EXECUTE_PERMISSION_TAGS = {
  BULK: 'bulk',
  IMPORT: 'import',
  EXPORT: 'export',
  ADMIN: 'admin',
  READ_ONLY: 'read-only',
} as const;

/**
 * Type Exports for Type Safety
 *
 * Export types derived from the constants for use in TypeScript
 * type annotations and interfaces.
 */
export type SlackExecuteDIToken =
  (typeof SLACK_EXECUTE_DI_TOKENS)[keyof typeof SLACK_EXECUTE_DI_TOKENS];
export type SlackExecuteErrorCategory =
  (typeof SLACK_EXECUTE_ERROR_CATEGORIES)[keyof typeof SLACK_EXECUTE_ERROR_CATEGORIES];
export type SlackExecuteDataClassification =
  (typeof SLACK_EXECUTE_DATA_CLASSIFICATION)[keyof typeof SLACK_EXECUTE_DATA_CLASSIFICATION];
export type SlackExecuteOperation =
  (typeof SLACK_EXECUTE_OPERATIONS)[keyof typeof SLACK_EXECUTE_OPERATIONS];
export type SlackExecutePermissionTag =
  (typeof SLACK_EXECUTE_PERMISSION_TAGS)[keyof typeof SLACK_EXECUTE_PERMISSION_TAGS];
