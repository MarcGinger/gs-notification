// @generated by gen v1.0.0 hash:regen
// DO NOT EDIT THIS BLOCK BY HAND. Your changes will be overwritten.
import { DomainError } from 'src/shared/errors';

export interface ExecuteContext extends Record<string, unknown> {
  id: string;
  recipient?: string;
  data?: Record<string, unknown>;
  status?: string;
  userId?: string;
  correlationId?: string;
  operation?: string;
  reason?: string;
}

export const ExecuteErrors = {
  AUTHORIZATION_FAILED: {
    code: 'EXECUTE.AUTHORIZATION_FAILED',
    title: 'Authorization Failed',
    detail: 'Policy evaluation failed for execute operation',
    category: 'domain',
    retryable: false,
  } as DomainError<'EXECUTE.AUTHORIZATION_FAILED', ExecuteContext>,
  CANNOT_DELETE_EXECUTE_WITH_DEPENDENCIES: {
    code: 'EXECUTE.CANNOT_DELETE_EXECUTE_WITH_DEPENDENCIES',
    title: 'Cannot Delete',
    detail: 'Cannot delete Execute with existing dependencies',
    category: 'validation',
    retryable: false,
  } as DomainError<
    'EXECUTE.CANNOT_DELETE_EXECUTE_WITH_DEPENDENCIES',
    ExecuteContext
  >,
  CONCURRENCY_CONFLICT: {
    code: 'EXECUTE.CONCURRENCY_CONFLICT',
    title: 'Concurrency Conflict',
    detail: 'Concurrency conflict for Execute',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.CONCURRENCY_CONFLICT', ExecuteContext>,
  CREATED_AT_REQUIRED: {
    code: 'EXECUTE.CREATED_AT_REQUIRED',
    title: 'Created At Required',
    detail: 'The execute creation timestamp is required.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.CREATED_AT_REQUIRED', ExecuteContext>,
  ENUM_NOT_ALLOWED_STATUS: {
    code: 'EXECUTE.ENUM_NOT_ALLOWED_STATUS',
    title: 'Invalid Option',
    detail: 'Status must be one of: requested, validated, queued, failed.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.ENUM_NOT_ALLOWED_STATUS', ExecuteContext>,
  EXECUTE_ALREADY_ACTIVE: {
    code: 'EXECUTE.EXECUTE_ALREADY_ACTIVE',
    title: 'Already Active',
    detail: 'Status is already active for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.EXECUTE_ALREADY_ACTIVE', ExecuteContext>,
  EXECUTE_ALREADY_EXISTS: {
    code: 'EXECUTE.EXECUTE_ALREADY_EXISTS',
    title: 'Already Exists',
    detail: 'Execute already exists',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.EXECUTE_ALREADY_EXISTS', ExecuteContext>,
  EXECUTE_ALREADY_INACTIVE: {
    code: 'EXECUTE.EXECUTE_ALREADY_INACTIVE',
    title: 'Already Inactive',
    detail: 'Status is already inactive for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.EXECUTE_ALREADY_INACTIVE', ExecuteContext>,
  EXECUTE_FACTORY_CREATION_FAILED: {
    code: 'EXECUTE.EXECUTE_FACTORY_CREATION_FAILED',
    title: 'Factory Creation Failed',
    detail: 'Failed to create Execute using factory.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.EXECUTE_FACTORY_CREATION_FAILED', ExecuteContext>,
  EXECUTE_INVARIANT_VIOLATION: {
    code: 'EXECUTE.EXECUTE_INVARIANT_VIOLATION',
    title: 'Invariant Violation',
    detail: 'Business invariant violation for Execute',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.EXECUTE_INVARIANT_VIOLATION', ExecuteContext>,
  EXECUTE_NOT_FOUND: {
    code: 'EXECUTE.EXECUTE_NOT_FOUND',
    title: 'Not Found',
    detail: 'Execute not found',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.EXECUTE_NOT_FOUND', ExecuteContext>,
  EXECUTE_UPDATE_FACTORY_FAILED: {
    code: 'EXECUTE.EXECUTE_UPDATE_FACTORY_FAILED',
    title: 'Update Factory Failed',
    detail: 'Failed to update Execute using factory.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.EXECUTE_UPDATE_FACTORY_FAILED', ExecuteContext>,
  EXECUTE_UPDATE_RECONSTITUTE_FAILED: {
    code: 'EXECUTE.EXECUTE_UPDATE_RECONSTITUTE_FAILED',
    title: 'Update Reconstitute Failed',
    detail: 'Failed to reconstitute Execute from snapshot for update.',
    category: 'validation',
    retryable: false,
  } as DomainError<
    'EXECUTE.EXECUTE_UPDATE_RECONSTITUTE_FAILED',
    ExecuteContext
  >,
  INVALID_CHANNEL_ID: {
    code: 'EXECUTE.INVALID_CHANNEL_ID',
    title: 'Value Required',
    detail: 'Channel is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_CHANNEL_ID', ExecuteContext>,
  INVALID_CHANNEL_ID_DATA: {
    code: 'EXECUTE.INVALID_CHANNEL_ID_DATA',
    title: 'Value Required',
    detail: 'Channel is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_CHANNEL_ID_DATA', ExecuteContext>,
  INVALID_CODE_DATA: {
    code: 'EXECUTE.INVALID_CODE_DATA',
    title: 'Invalid Version Data',
    detail: 'The execute version data is invalid.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_CODE_DATA', ExecuteContext>,
  INVALID_DATA: {
    code: 'EXECUTE.INVALID_DATA',
    title: 'Value Required',
    detail: 'Data is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_DATA', ExecuteContext>,
  INVALID_DATA_DATA: {
    code: 'EXECUTE.INVALID_DATA_DATA',
    title: 'Value Required',
    detail: 'Data is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_DATA_DATA', ExecuteContext>,
  INVALID_EXECUTE_DATA: {
    code: 'EXECUTE.INVALID_EXECUTE_DATA',
    title: 'Invalid Data',
    detail: 'Invalid Execute data provided',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_EXECUTE_DATA', ExecuteContext>,
  INVALID_ID: {
    code: 'EXECUTE.INVALID_ID',
    title: 'Value Required',
    detail: 'Id is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_ID', ExecuteContext>,
  INVALID_ID_DATA: {
    code: 'EXECUTE.INVALID_ID_DATA',
    title: 'Value Required',
    detail: 'Id is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_ID_DATA', ExecuteContext>,
  INVALID_RECIPIENT: {
    code: 'EXECUTE.INVALID_RECIPIENT',
    title: 'Value Required',
    detail: 'Recipient is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_RECIPIENT', ExecuteContext>,
  INVALID_RECIPIENT_DATA: {
    code: 'EXECUTE.INVALID_RECIPIENT_DATA',
    title: 'Value Required',
    detail: 'Recipient is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_RECIPIENT_DATA', ExecuteContext>,
  INVALID_STATUS: {
    code: 'EXECUTE.INVALID_STATUS',
    title: 'Value Required',
    detail: 'Status is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_STATUS', ExecuteContext>,
  INVALID_STATUS_DATA: {
    code: 'EXECUTE.INVALID_STATUS_DATA',
    title: 'Value Required',
    detail: 'Status is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_STATUS_DATA', ExecuteContext>,
  INVALID_STATUS_TRANSITION: {
    code: 'EXECUTE.INVALID_STATUS_TRANSITION',
    title: 'Invalid State Transition',
    detail: 'Status cannot transition to the requested state.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_STATUS_TRANSITION', ExecuteContext>,
  INVALID_TEMPLATE_CODE: {
    code: 'EXECUTE.INVALID_TEMPLATE_CODE',
    title: 'Value Required',
    detail: 'Template is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_TEMPLATE_CODE', ExecuteContext>,
  INVALID_TEMPLATE_CODE_DATA: {
    code: 'EXECUTE.INVALID_TEMPLATE_CODE_DATA',
    title: 'Value Required',
    detail: 'Template is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_TEMPLATE_CODE_DATA', ExecuteContext>,
  INVALID_WORKSPACE_ID: {
    code: 'EXECUTE.INVALID_WORKSPACE_ID',
    title: 'Value Required',
    detail: 'Workspace is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_WORKSPACE_ID', ExecuteContext>,
  INVALID_WORKSPACE_ID_DATA: {
    code: 'EXECUTE.INVALID_WORKSPACE_ID_DATA',
    title: 'Value Required',
    detail: 'Workspace is required for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.INVALID_WORKSPACE_ID_DATA', ExecuteContext>,
  NOT_IMPLEMENTED: {
    code: 'EXECUTE.NOT_IMPLEMENTED',
    title: 'Not Implemented',
    detail: 'Method not implemented for Execute.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.NOT_IMPLEMENTED', ExecuteContext>,
  NOT_UUID_ID: {
    code: 'EXECUTE.NOT_UUID_ID',
    title: 'Invalid UUID',
    detail: 'Id must be a valid RFC-4122 UUID.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.NOT_UUID_ID', ExecuteContext>,
  PERMISSION_DENIED: {
    code: 'EXECUTE.PERMISSION_DENIED',
    title: 'Permission Denied',
    detail: 'Insufficient permissions to access execute',
    category: 'domain',
    retryable: false,
  } as DomainError<'EXECUTE.PERMISSION_DENIED', ExecuteContext>,
  PERMISSION_INVALID: {
    code: 'EXECUTE.PERMISSION_INVALID',
    title: 'Invalid Permission',
    detail: 'The provided permission for execute is not valid',
    category: 'domain',
    retryable: false,
  } as DomainError<'EXECUTE.PERMISSION_INVALID', ExecuteContext>,
  PERMISSION_NOT_FOUND: {
    code: 'EXECUTE.PERMISSION_NOT_FOUND',
    title: 'Permission Not Found',
    detail: 'The requested permission for execute does not exist',
    category: 'domain',
    retryable: false,
  } as DomainError<'EXECUTE.PERMISSION_NOT_FOUND', ExecuteContext>,
  STATUS_INVALID_TRANSITION: {
    code: 'EXECUTE.STATUS_INVALID_TRANSITION',
    title: 'Invalid Status Transition',
    detail: 'Cannot transition Status to the requested state.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.STATUS_INVALID_TRANSITION', ExecuteContext>,
  UPDATED_AT_REQUIRED: {
    code: 'EXECUTE.UPDATED_AT_REQUIRED',
    title: 'Updated At Required',
    detail: 'The execute update timestamp is required.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.UPDATED_AT_REQUIRED', ExecuteContext>,
  UUID_VERSION_MISMATCH_ID: {
    code: 'EXECUTE.UUID_VERSION_MISMATCH_ID',
    title: 'UUID Version Mismatch',
    detail: 'Id does not match the required UUID version.',
    category: 'validation',
    retryable: false,
  } as DomainError<'EXECUTE.UUID_VERSION_MISMATCH_ID', ExecuteContext>,
} as const;
