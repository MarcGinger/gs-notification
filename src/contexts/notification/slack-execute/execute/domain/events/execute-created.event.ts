// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import type { ExecuteStatusValue } from '../value-objects';
/**
 * Execute Created Event Payload
 * Contains only business facts - no envelope metadata, timestamps, or versioning
 */
export interface ExecuteCreatedEventPayload {
  id: string;
  workspaceId: string;
  channelId: string;
  templateCode: string;
  recipient?: string;
  data?: Record<string, unknown>;
  status?: ExecuteStatusValue;
}

/**
 * Execute Created Domain Event
 *
 * Emitted when a new execute is successfully created.
 * Contains complete execute information and creation metadata.
 * Enhanced with security metadata and PII protection capabilities.
 */
export class ExecuteCreatedEvent {
  public readonly eventType = 'NotificationSlackExecuteExecuteCreated.v1';
  public readonly eventVersion = 'v1';

  constructor(public readonly payload: ExecuteCreatedEventPayload) {}

  // Factory method - no metadata needed, just business data
  static create(data: ExecuteCreatedEventPayload): ExecuteCreatedEvent {
    return new ExecuteCreatedEvent(data);
  }

  get id(): string {
    return this.payload.id;
  }

  get workspaceId(): string {
    return this.payload.workspaceId;
  }

  get channelId(): string {
    return this.payload.channelId;
  }

  get templateCode(): string {
    return this.payload.templateCode;
  }

  get recipient(): string | undefined {
    return this.payload.recipient;
  }

  get data(): Record<string, unknown> | undefined {
    return this.payload.data;
  }

  get status(): ExecuteStatusValue | undefined {
    return this.payload.status;
  }
}
