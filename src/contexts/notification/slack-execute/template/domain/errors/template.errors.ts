// @generated by gen v1.0.0 hash:regen
// DO NOT EDIT THIS BLOCK BY HAND. Your changes will be overwritten.
import { DomainError } from 'src/shared/errors';

export interface TemplateContext extends Record<string, unknown> {
  code: string;
  workspaceId: string;
  name: string;
  description?: string;
  contentBlocks: string;
  variables?: string;
  samplePayload?: Record<string, unknown>;
  enabled: boolean;
  userId?: string;
  correlationId?: string;
  operation?: string;
  reason?: string;
}

export const TemplateErrors = {
  AUTHORIZATION_FAILED: {
    code: 'TEMPLATE.AUTHORIZATION_FAILED',
    title: 'Authorization Failed',
    detail: 'Policy evaluation failed for template operation',
    category: 'domain',
    retryable: false,
  } as DomainError<'TEMPLATE.AUTHORIZATION_FAILED', TemplateContext>,
  INVALID_CODE_DATA: {
    code: 'TEMPLATE.INVALID_CODE_DATA',
    title: 'Value Required',
    detail: 'Code is required for Template.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.INVALID_CODE_DATA', TemplateContext>,
  INVALID_CONTENT_BLOCKS_DATA: {
    code: 'TEMPLATE.INVALID_CONTENT_BLOCKS_DATA',
    title: 'Value Required',
    detail: 'Content is required for Template.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.INVALID_CONTENT_BLOCKS_DATA', TemplateContext>,
  INVALID_DESCRIPTION_DATA: {
    code: 'TEMPLATE.INVALID_DESCRIPTION_DATA',
    title: 'Value Required',
    detail: 'Description is required for Template.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.INVALID_DESCRIPTION_DATA', TemplateContext>,
  INVALID_ENABLED_DATA: {
    code: 'TEMPLATE.INVALID_ENABLED_DATA',
    title: 'Value Required',
    detail: 'Enabled is required for Template.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.INVALID_ENABLED_DATA', TemplateContext>,
  INVALID_NAME_DATA: {
    code: 'TEMPLATE.INVALID_NAME_DATA',
    title: 'Value Required',
    detail: 'Name is required for Template.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.INVALID_NAME_DATA', TemplateContext>,
  INVALID_SAMPLE_PAYLOAD_DATA: {
    code: 'TEMPLATE.INVALID_SAMPLE_PAYLOAD_DATA',
    title: 'Value Required',
    detail: 'Sample is required for Template.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.INVALID_SAMPLE_PAYLOAD_DATA', TemplateContext>,
  INVALID_TEMPLATE_DATA: {
    code: 'TEMPLATE.INVALID_TEMPLATE_DATA',
    title: 'Template Invalid Data',
    detail: 'The provided data for Template is invalid.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.INVALID_TEMPLATE_DATA', TemplateContext>,
  INVALID_VARIABLES_DATA: {
    code: 'TEMPLATE.INVALID_VARIABLES_DATA',
    title: 'Value Required',
    detail: 'Variables is required for Template.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.INVALID_VARIABLES_DATA', TemplateContext>,
  INVALID_WORKSPACE_ID_DATA: {
    code: 'TEMPLATE.INVALID_WORKSPACE_ID_DATA',
    title: 'Value Required',
    detail: 'Workspace is required for Template.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.INVALID_WORKSPACE_ID_DATA', TemplateContext>,
  NOT_IMPLEMENTED: {
    code: 'TEMPLATE.NOT_IMPLEMENTED',
    title: 'Not Implemented',
    detail: 'Method not implemented for Template.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.NOT_IMPLEMENTED', TemplateContext>,
  PERMISSION_DENIED: {
    code: 'TEMPLATE.PERMISSION_DENIED',
    title: 'Permission Denied',
    detail: 'Insufficient permissions to access template',
    category: 'domain',
    retryable: false,
  } as DomainError<'TEMPLATE.PERMISSION_DENIED', TemplateContext>,
  PERMISSION_INVALID: {
    code: 'TEMPLATE.PERMISSION_INVALID',
    title: 'Invalid Permission',
    detail: 'The provided permission for template is not valid',
    category: 'domain',
    retryable: false,
  } as DomainError<'TEMPLATE.PERMISSION_INVALID', TemplateContext>,
  PERMISSION_NOT_FOUND: {
    code: 'TEMPLATE.PERMISSION_NOT_FOUND',
    title: 'Permission Not Found',
    detail: 'The requested permission for template does not exist',
    category: 'domain',
    retryable: false,
  } as DomainError<'TEMPLATE.PERMISSION_NOT_FOUND', TemplateContext>,
  TEMPLATE_ALREADY_EXISTS: {
    code: 'TEMPLATE.TEMPLATE_ALREADY_EXISTS',
    title: 'Template Already Exists',
    detail: 'A Template with these details already exists.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.TEMPLATE_ALREADY_EXISTS', TemplateContext>,
  TEMPLATE_NOT_FOUND: {
    code: 'TEMPLATE.TEMPLATE_NOT_FOUND',
    title: 'Template Not Found',
    detail: 'The requested Template could not be found.',
    category: 'validation',
    retryable: false,
  } as DomainError<'TEMPLATE.TEMPLATE_NOT_FOUND', TemplateContext>,
} as const;
