// @generated by gen v1.0.0 hash:regen
// DO NOT EDIT THIS BLOCK BY HAND. Your changes will be overwritten.
import { DomainError } from 'src/shared/errors';

export interface AppConfigContext extends Record<string, unknown> {
  maxRetryAttempts: number;
  retryBackoffSeconds: number;
  defaultLocale: string;
  loggingEnabled: boolean;
  auditChannelId?: string;
  metadata?: Record<string, unknown>;
  userId?: string;
  correlationId?: string;
  operation?: string;
  reason?: string;
}

export const AppConfigErrors = {
  APP_CONFIG_ALREADY_EXISTS: {
    code: 'APP_CONFIG.APP_CONFIG_ALREADY_EXISTS',
    title: 'AppConfig Already Exists',
    detail: 'A App config with these details already exists.',
    category: 'validation',
    retryable: false,
  } as DomainError<'APP_CONFIG.APP_CONFIG_ALREADY_EXISTS', AppConfigContext>,
  APP_CONFIG_NOT_FOUND: {
    code: 'APP_CONFIG.APP_CONFIG_NOT_FOUND',
    title: 'AppConfig Not Found',
    detail: 'The requested App config could not be found.',
    category: 'validation',
    retryable: false,
  } as DomainError<'APP_CONFIG.APP_CONFIG_NOT_FOUND', AppConfigContext>,
  AUTHORIZATION_FAILED: {
    code: 'APP_CONFIG.AUTHORIZATION_FAILED',
    title: 'Authorization Failed',
    detail: 'Policy evaluation failed for app_config operation',
    category: 'domain',
    retryable: false,
  } as DomainError<'APP_CONFIG.AUTHORIZATION_FAILED', AppConfigContext>,
  INVALID_APP_CONFIG_DATA: {
    code: 'APP_CONFIG.INVALID_APP_CONFIG_DATA',
    title: 'AppConfig Invalid Data',
    detail: 'The provided data for App config is invalid.',
    category: 'validation',
    retryable: false,
  } as DomainError<'APP_CONFIG.INVALID_APP_CONFIG_DATA', AppConfigContext>,
  INVALID_AUDIT_CHANNEL_ID_DATA: {
    code: 'APP_CONFIG.INVALID_AUDIT_CHANNEL_ID_DATA',
    title: 'Value Required',
    detail: 'Audit channel id is required for App config.',
    category: 'validation',
    retryable: false,
  } as DomainError<
    'APP_CONFIG.INVALID_AUDIT_CHANNEL_ID_DATA',
    AppConfigContext
  >,
  INVALID_DEFAULT_LOCALE_DATA: {
    code: 'APP_CONFIG.INVALID_DEFAULT_LOCALE_DATA',
    title: 'Value Required',
    detail: 'Default locale is required for App config.',
    category: 'validation',
    retryable: false,
  } as DomainError<'APP_CONFIG.INVALID_DEFAULT_LOCALE_DATA', AppConfigContext>,
  INVALID_LOGGING_ENABLED_DATA: {
    code: 'APP_CONFIG.INVALID_LOGGING_ENABLED_DATA',
    title: 'Value Required',
    detail: 'Logging enabled is required for App config.',
    category: 'validation',
    retryable: false,
  } as DomainError<'APP_CONFIG.INVALID_LOGGING_ENABLED_DATA', AppConfigContext>,
  INVALID_MAX_RETRY_ATTEMPTS_DATA: {
    code: 'APP_CONFIG.INVALID_MAX_RETRY_ATTEMPTS_DATA',
    title: 'Value Required',
    detail: 'Max retry attempts is required for App config.',
    category: 'validation',
    retryable: false,
  } as DomainError<
    'APP_CONFIG.INVALID_MAX_RETRY_ATTEMPTS_DATA',
    AppConfigContext
  >,
  INVALID_METADATA_DATA: {
    code: 'APP_CONFIG.INVALID_METADATA_DATA',
    title: 'Value Required',
    detail: 'Metadata is required for App config.',
    category: 'validation',
    retryable: false,
  } as DomainError<'APP_CONFIG.INVALID_METADATA_DATA', AppConfigContext>,
  INVALID_RETRY_BACKOFF_SECONDS_DATA: {
    code: 'APP_CONFIG.INVALID_RETRY_BACKOFF_SECONDS_DATA',
    title: 'Value Required',
    detail: 'Retry backoff seconds is required for App config.',
    category: 'validation',
    retryable: false,
  } as DomainError<
    'APP_CONFIG.INVALID_RETRY_BACKOFF_SECONDS_DATA',
    AppConfigContext
  >,
  INVALID_WORKSPACE_CODE_DATA: {
    code: 'APP_CONFIG.INVALID_WORKSPACE_CODE_DATA',
    title: 'Value Required',
    detail: 'Workspace code is required for App config.',
    category: 'validation',
    retryable: false,
  } as DomainError<'APP_CONFIG.INVALID_WORKSPACE_CODE_DATA', AppConfigContext>,
  NOT_IMPLEMENTED: {
    code: 'APP_CONFIG.NOT_IMPLEMENTED',
    title: 'Not Implemented',
    detail: 'Method not implemented for App config.',
    category: 'validation',
    retryable: false,
  } as DomainError<'APP_CONFIG.NOT_IMPLEMENTED', AppConfigContext>,
  PERMISSION_DENIED: {
    code: 'APP_CONFIG.PERMISSION_DENIED',
    title: 'Permission Denied',
    detail: 'Insufficient permissions to access app_config',
    category: 'domain',
    retryable: false,
  } as DomainError<'APP_CONFIG.PERMISSION_DENIED', AppConfigContext>,
  PERMISSION_INVALID: {
    code: 'APP_CONFIG.PERMISSION_INVALID',
    title: 'Invalid Permission',
    detail: 'The provided permission for app_config is not valid',
    category: 'domain',
    retryable: false,
  } as DomainError<'APP_CONFIG.PERMISSION_INVALID', AppConfigContext>,
  PERMISSION_NOT_FOUND: {
    code: 'APP_CONFIG.PERMISSION_NOT_FOUND',
    title: 'Permission Not Found',
    detail: 'The requested permission for app_config does not exist',
    category: 'domain',
    retryable: false,
  } as DomainError<'APP_CONFIG.PERMISSION_NOT_FOUND', AppConfigContext>,
} as const;
