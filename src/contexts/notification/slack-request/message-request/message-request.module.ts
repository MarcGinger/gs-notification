// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import { Module } from '@nestjs/common';
import { SlackRequestSharedModule } from '../slack-request-shared.module';
import { MessageRequestController } from './interface/http/controllers';
import {
  MessageRequestApplicationService,
  MessageRequestAuthorizationService,
  MessageRequestAuthorizationAdapter,
  MessageRequestForeignKeyValidatorService,
} from './application/services';
import {
  ICreateMessageRequestUseCase,
  CreateMessageRequestUseCase,
  IGetMessageRequestUseCase,
  GetMessageRequestUseCase,
  IListMessageRequestUseCase,
  ListMessageRequestUseCase,
} from './application/use-cases';

// import { IMessageRequestRepository } from './application/ports';
import {
  MessageRequestQueryRepository,
  MessageRequestReaderRepository,
  MessageRequestWriterRepository,
  WorkspaceReaderRepository,
  TemplateReaderRepository,
  ChannelReaderRepository,
} from './infrastructure/repositories';
import { MessageRequestQueueService } from './infrastructure/services';
import { MessageRequestProcessor } from './infrastructure/processors';

// Tokens for injection - imported directly from port files
import {
  MESSAGE_REQUEST_READER_TOKEN,
  MESSAGE_REQUEST_WRITER_TOKEN,
  WORKSPACE_REFERENCE_READER_TOKEN,
  TEMPLATE_REFERENCE_READER_TOKEN,
  CHANNEL_REFERENCE_READER_TOKEN,
  MESSAGE_REQUEST_QUERY_TOKEN,
} from './application/ports';
@Module({
  imports: [
    SlackRequestSharedModule, // Provides all common infrastructure and services
  ],
  controllers: [MessageRequestController],
  providers: [
    // Repository implementations with tokens (before services that depend on them)
    {
      provide: MESSAGE_REQUEST_READER_TOKEN,
      useClass: MessageRequestReaderRepository,
    },
    {
      provide: MESSAGE_REQUEST_WRITER_TOKEN,
      useClass: MessageRequestWriterRepository,
    },
    {
      provide: MESSAGE_REQUEST_QUERY_TOKEN,
      useClass: MessageRequestQueryRepository,
    },

    // Bounded Context Reader Repositories
    {
      provide: WORKSPACE_REFERENCE_READER_TOKEN,
      useClass: WorkspaceReaderRepository,
    },
    {
      provide: TEMPLATE_REFERENCE_READER_TOKEN,
      useClass: TemplateReaderRepository,
    },
    {
      provide: CHANNEL_REFERENCE_READER_TOKEN,
      useClass: ChannelReaderRepository,
    },

    // Services that depend on repositories
    MessageRequestApplicationService,
    MessageRequestAuthorizationService,
    MessageRequestAuthorizationAdapter,
    MessageRequestForeignKeyValidatorService,

    // Queue and processing services
    MessageRequestQueueService,
    MessageRequestProcessor,

    // Use case implementations
    {
      provide: ICreateMessageRequestUseCase,
      useClass: CreateMessageRequestUseCase,
    },
    {
      provide: IGetMessageRequestUseCase,
      useClass: GetMessageRequestUseCase,
    },
    {
      provide: IListMessageRequestUseCase,
      useClass: ListMessageRequestUseCase,
    },
  ],
  exports: [
    // Repository tokens for external module consumption
    MESSAGE_REQUEST_READER_TOKEN,
    MESSAGE_REQUEST_WRITER_TOKEN,
    MESSAGE_REQUEST_QUERY_TOKEN,
    // Bounded Context Reader tokens
    WORKSPACE_REFERENCE_READER_TOKEN,
    TEMPLATE_REFERENCE_READER_TOKEN,
    CHANNEL_REFERENCE_READER_TOKEN,
    // Queue service for external access
    MessageRequestQueueService,
  ],
})
export class MessageRequestModule {}
