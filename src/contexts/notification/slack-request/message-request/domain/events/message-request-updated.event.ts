// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

import type { MessageRequestStatusValue } from '../value-objects';

/**
 * MessageRequest Updated Event Payload
 * Domain-shaped payload with no PII
 * Same shape as Created event for consistent replayability
 */
export interface MessageRequestUpdatedEventPayload {
  id: string;
  workspaceId: string;
  templateCode: string;
  recipient?: string;
  data?: Record<string, unknown>;
  status?: MessageRequestStatusValue;
}

/**
 * MessageRequest Updated Domain Event
 *
 * Emitted when messageRequest information is modified.
 * Contains complete domain state (same shape as Created event) for replayability.
 */
export class MessageRequestUpdatedEvent {
  public readonly eventType =
    'NotificationSlackRequestMessageRequestUpdated.v1';
  public readonly eventVersion = 'v1';

  constructor(public readonly payload: MessageRequestUpdatedEventPayload) {}

  // Factory method - simple domain data, no metadata in payload
  static create(
    data: MessageRequestUpdatedEventPayload,
  ): MessageRequestUpdatedEvent {
    return new MessageRequestUpdatedEvent(data);
  }

  get id(): string {
    return this.payload.id;
  }

  get workspaceId(): string {
    return this.payload.workspaceId;
  }

  get templateCode(): string {
    return this.payload.templateCode;
  }

  get recipient(): string | undefined {
    return this.payload.recipient;
  }

  get data(): Record<string, unknown> | undefined {
    return this.payload.data;
  }

  get status(): MessageRequestStatusValue | undefined {
    return this.payload.status;
  }
}
