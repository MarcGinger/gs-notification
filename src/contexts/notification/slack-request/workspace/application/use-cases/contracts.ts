// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

/**
 * Abstract Use Case Contracts for Workspace Operations
 *
 * These abstract classes are used instead of interfaces to work with NestJS DI.
 * TypeScript interfaces are erased at runtime and cannot be injected.
 */

import { Result, DomainError } from 'src/shared/errors';
import type { IUserToken } from 'src/shared/security';
import type {
  DetailWorkspaceResponse,
  WorkspacePageResponse,
  ListWorkspaceFilterRequest,
} from '../dtos';

export abstract class IGetWorkspaceUseCase {
  abstract execute(params: {
    user: IUserToken;
    code: string;
    correlationId: string;
  }): Promise<Result<DetailWorkspaceResponse, DomainError>>;
}
export abstract class IListWorkspaceUseCase {
  abstract execute(params: {
    user: IUserToken;
    filter?: ListWorkspaceFilterRequest;
    correlationId: string;
  }): Promise<Result<WorkspacePageResponse, DomainError>>;
}
