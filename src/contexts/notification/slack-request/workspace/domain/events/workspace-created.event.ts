// @generated by gen v1.0.0 hash:regen
// REMOVE THIS COMMENT TO STOP AUTOMATIC UPDATES TO THIS BLOCK

/**
 * Workspace Created Event Payload
 * Contains only business facts - no envelope metadata, timestamps, or versioning
 */
export interface WorkspaceCreatedEventPayload {
  code: string;
  name: string;
  botToken?: string;
  signingSecret?: string;
  appId?: string;
  botUserId?: string;
  defaultChannelId?: string;
  enabled: boolean;
}

/**
 * Workspace Created Domain Event
 *
 * Emitted when a new workspace is successfully created.
 * Contains complete workspace information and creation metadata.
 * Enhanced with security metadata and PII protection capabilities.
 */
export class WorkspaceCreatedEvent {
  public readonly eventType = 'NotificationSlackRequestWorkspaceCreated.v1';
  public readonly eventVersion = 'v1';

  constructor(public readonly payload: WorkspaceCreatedEventPayload) {}

  // Factory method - no metadata needed, just business data
  static create(data: WorkspaceCreatedEventPayload): WorkspaceCreatedEvent {
    return new WorkspaceCreatedEvent(data);
  }

  get code(): string {
    return this.payload.code;
  }

  get name(): string {
    return this.payload.name;
  }

  get botToken(): string | undefined {
    return this.payload.botToken;
  }

  get signingSecret(): string | undefined {
    return this.payload.signingSecret;
  }

  get appId(): string | undefined {
    return this.payload.appId;
  }

  get botUserId(): string | undefined {
    return this.payload.botUserId;
  }

  get defaultChannelId(): string | undefined {
    return this.payload.defaultChannelId;
  }

  get enabled(): boolean {
    return this.payload.enabled;
  }
}
