// @generated by gen v1.0.0 hash:regen
// DO NOT EDIT THIS BLOCK BY HAND. Your changes will be overwritten.
import { DomainError } from 'src/shared/errors';

export interface WorkspaceContext extends Record<string, unknown> {
  id: string;
  name: string;
  appId?: string;
  defaultChannelId?: string;
  enabled: boolean;
  userId?: string;
  correlationId?: string;
  operation?: string;
  reason?: string;
}

export const WorkspaceErrors = {
  AUTHORIZATION_FAILED: {
    code: 'WORKSPACE.AUTHORIZATION_FAILED',
    title: 'Authorization Failed',
    detail: 'Policy evaluation failed for workspace operation',
    category: 'domain',
    retryable: false,
  } as DomainError<'WORKSPACE.AUTHORIZATION_FAILED', WorkspaceContext>,
  INVALID_APP_ID_DATA: {
    code: 'WORKSPACE.INVALID_APP_ID_DATA',
    title: 'Value Required',
    detail: 'App is required for Workspace.',
    category: 'validation',
    retryable: false,
  } as DomainError<'WORKSPACE.INVALID_APP_ID_DATA', WorkspaceContext>,
  INVALID_DEFAULT_CHANNEL_ID_DATA: {
    code: 'WORKSPACE.INVALID_DEFAULT_CHANNEL_ID_DATA',
    title: 'Value Required',
    detail: 'Default is required for Workspace.',
    category: 'validation',
    retryable: false,
  } as DomainError<
    'WORKSPACE.INVALID_DEFAULT_CHANNEL_ID_DATA',
    WorkspaceContext
  >,
  INVALID_ENABLED_DATA: {
    code: 'WORKSPACE.INVALID_ENABLED_DATA',
    title: 'Value Required',
    detail: 'Enabled is required for Workspace.',
    category: 'validation',
    retryable: false,
  } as DomainError<'WORKSPACE.INVALID_ENABLED_DATA', WorkspaceContext>,
  INVALID_ID_DATA: {
    code: 'WORKSPACE.INVALID_ID_DATA',
    title: 'Value Required',
    detail: 'Id is required for Workspace.',
    category: 'validation',
    retryable: false,
  } as DomainError<'WORKSPACE.INVALID_ID_DATA', WorkspaceContext>,
  INVALID_NAME_DATA: {
    code: 'WORKSPACE.INVALID_NAME_DATA',
    title: 'Value Required',
    detail: 'Name is required for Workspace.',
    category: 'validation',
    retryable: false,
  } as DomainError<'WORKSPACE.INVALID_NAME_DATA', WorkspaceContext>,
  INVALID_WORKSPACE_DATA: {
    code: 'WORKSPACE.INVALID_WORKSPACE_DATA',
    title: 'Workspace Invalid Data',
    detail: 'The provided data for Workspace is invalid.',
    category: 'validation',
    retryable: false,
  } as DomainError<'WORKSPACE.INVALID_WORKSPACE_DATA', WorkspaceContext>,
  NOT_IMPLEMENTED: {
    code: 'WORKSPACE.NOT_IMPLEMENTED',
    title: 'Not Implemented',
    detail: 'Method not implemented for Workspace.',
    category: 'validation',
    retryable: false,
  } as DomainError<'WORKSPACE.NOT_IMPLEMENTED', WorkspaceContext>,
  PERMISSION_DENIED: {
    code: 'WORKSPACE.PERMISSION_DENIED',
    title: 'Permission Denied',
    detail: 'Insufficient permissions to access workspace',
    category: 'domain',
    retryable: false,
  } as DomainError<'WORKSPACE.PERMISSION_DENIED', WorkspaceContext>,
  PERMISSION_INVALID: {
    code: 'WORKSPACE.PERMISSION_INVALID',
    title: 'Invalid Permission',
    detail: 'The provided permission for workspace is not valid',
    category: 'domain',
    retryable: false,
  } as DomainError<'WORKSPACE.PERMISSION_INVALID', WorkspaceContext>,
  PERMISSION_NOT_FOUND: {
    code: 'WORKSPACE.PERMISSION_NOT_FOUND',
    title: 'Permission Not Found',
    detail: 'The requested permission for workspace does not exist',
    category: 'domain',
    retryable: false,
  } as DomainError<'WORKSPACE.PERMISSION_NOT_FOUND', WorkspaceContext>,
  WORKSPACE_ALREADY_EXISTS: {
    code: 'WORKSPACE.WORKSPACE_ALREADY_EXISTS',
    title: 'Workspace Already Exists',
    detail: 'A Workspace with these details already exists.',
    category: 'validation',
    retryable: false,
  } as DomainError<'WORKSPACE.WORKSPACE_ALREADY_EXISTS', WorkspaceContext>,
  WORKSPACE_NOT_FOUND: {
    code: 'WORKSPACE.WORKSPACE_NOT_FOUND',
    title: 'Workspace Not Found',
    detail: 'The requested Workspace could not be found.',
    category: 'validation',
    retryable: false,
  } as DomainError<'WORKSPACE.WORKSPACE_NOT_FOUND', WorkspaceContext>,
} as const;
